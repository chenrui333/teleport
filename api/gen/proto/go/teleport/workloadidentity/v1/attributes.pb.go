// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: teleport/workloadidentity/v1/attributes.proto

package workloadidentityv1pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The collection of attributes that result from the join process.
type JoinAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The collection of attributes that result from the join process but are not
	// specific to any particular join method.
	Meta *MetaJoinAttrs `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Attributes that are specific to the GitLab join method.
	Gitlab *GitLabJoinAttrs `protobuf:"bytes,2,opt,name=gitlab,proto3" json:"gitlab,omitempty"`
	// Attributes that are specific to the GitHub join method.
	Github *GitHubJoinAttrs `protobuf:"bytes,3,opt,name=github,proto3" json:"github,omitempty"`
	// Attributes that are specific to the AWS IAM (`iam`) join method.
	Iam *AWSIAMJoinAttrs `protobuf:"bytes,4,opt,name=iam,proto3" json:"iam,omitempty"`
}

func (x *JoinAttrs) Reset() {
	*x = JoinAttrs{}
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinAttrs) ProtoMessage() {}

func (x *JoinAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinAttrs.ProtoReflect.Descriptor instead.
func (*JoinAttrs) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *JoinAttrs) GetMeta() *MetaJoinAttrs {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *JoinAttrs) GetGitlab() *GitLabJoinAttrs {
	if x != nil {
		return x.Gitlab
	}
	return nil
}

func (x *JoinAttrs) GetGithub() *GitHubJoinAttrs {
	if x != nil {
		return x.Github
	}
	return nil
}

func (x *JoinAttrs) GetIam() *AWSIAMJoinAttrs {
	if x != nil {
		return x.Iam
	}
	return nil
}

// The collection of attributes that result from the join process but are not
// specific to any particular join method.
type MetaJoinAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the join token that was used to join.
	//
	// This field is omitted if the join token that was used to join was of the
	// `token` method as in this case, the name of the join token is sensitive.
	//
	// Example: `my-gitlab-join-token`
	JoinTokenName string `protobuf:"bytes,1,opt,name=join_token_name,json=joinTokenName,proto3" json:"join_token_name,omitempty"`
	// The name of the join method that was used to join.
	//
	// Example: `gitlab`
	JoinMethod string `protobuf:"bytes,2,opt,name=join_method,json=joinMethod,proto3" json:"join_method,omitempty"`
}

func (x *MetaJoinAttrs) Reset() {
	*x = MetaJoinAttrs{}
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaJoinAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaJoinAttrs) ProtoMessage() {}

func (x *MetaJoinAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaJoinAttrs.ProtoReflect.Descriptor instead.
func (*MetaJoinAttrs) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *MetaJoinAttrs) GetJoinTokenName() string {
	if x != nil {
		return x.JoinTokenName
	}
	return ""
}

func (x *MetaJoinAttrs) GetJoinMethod() string {
	if x != nil {
		return x.JoinMethod
	}
	return ""
}

// Attributes that are specific to the GitLab join method.
//
// Typically, these are mapped directly from the claims of the GitLab JWT that
// was used to join. You can view the documentation for those claims at:
// https://docs.gitlab.com/ee/ci/secrets/id_token_authentication.html#token-payload
type GitLabJoinAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `sub` claim of the GitLab JWT that was used to join.
	// Example: `project_path:mygroup/my-project:ref_type:branch:ref:main`
	Sub                  string `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Ref                  string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	RefType              string `protobuf:"bytes,3,opt,name=ref_type,json=refType,proto3" json:"ref_type,omitempty"`
	RefProtected         bool   `protobuf:"varint,4,opt,name=ref_protected,json=refProtected,proto3" json:"ref_protected,omitempty"`
	NamespacePath        string `protobuf:"bytes,5,opt,name=namespace_path,json=namespacePath,proto3" json:"namespace_path,omitempty"`
	NamespaceId          string `protobuf:"bytes,6,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ProjectPath          string `protobuf:"bytes,7,opt,name=project_path,json=projectPath,proto3" json:"project_path,omitempty"`
	ProjectId            string `protobuf:"bytes,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId               string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserLogin            string `protobuf:"bytes,10,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	UserEmail            string `protobuf:"bytes,11,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	PipelineId           string `protobuf:"bytes,12,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	PipelineSource       string `protobuf:"bytes,13,opt,name=pipeline_source,json=pipelineSource,proto3" json:"pipeline_source,omitempty"`
	RefPath              string `protobuf:"bytes,14,opt,name=ref_path,json=refPath,proto3" json:"ref_path,omitempty"`
	Environment          string `protobuf:"bytes,15,opt,name=environment,proto3" json:"environment,omitempty"`
	EnvironmentProtected bool   `protobuf:"varint,16,opt,name=environment_protected,json=environmentProtected,proto3" json:"environment_protected,omitempty"`
	DeploymentTier       string `protobuf:"bytes,17,opt,name=deployment_tier,json=deploymentTier,proto3" json:"deployment_tier,omitempty"`
	EnvironmentAction    string `protobuf:"bytes,18,opt,name=environment_action,json=environmentAction,proto3" json:"environment_action,omitempty"`
	RunnerId             uint32 `protobuf:"varint,19,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
	RunnerEnvironment    string `protobuf:"bytes,20,opt,name=runner_environment,json=runnerEnvironment,proto3" json:"runner_environment,omitempty"`
	Sha                  string `protobuf:"bytes,21,opt,name=sha,proto3" json:"sha,omitempty"`
	CiConfigRefUri       string `protobuf:"bytes,22,opt,name=ci_config_ref_uri,json=ciConfigRefUri,proto3" json:"ci_config_ref_uri,omitempty"`
	CiConfigRef          string `protobuf:"bytes,23,opt,name=ci_config_ref,json=ciConfigRef,proto3" json:"ci_config_ref,omitempty"`
	Jti                  string `protobuf:"bytes,24,opt,name=jti,proto3" json:"jti,omitempty"` // TODO: More of these...
}

func (x *GitLabJoinAttrs) Reset() {
	*x = GitLabJoinAttrs{}
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitLabJoinAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitLabJoinAttrs) ProtoMessage() {}

func (x *GitLabJoinAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitLabJoinAttrs.ProtoReflect.Descriptor instead.
func (*GitLabJoinAttrs) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP(), []int{2}
}

func (x *GitLabJoinAttrs) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *GitLabJoinAttrs) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *GitLabJoinAttrs) GetRefType() string {
	if x != nil {
		return x.RefType
	}
	return ""
}

func (x *GitLabJoinAttrs) GetRefProtected() bool {
	if x != nil {
		return x.RefProtected
	}
	return false
}

func (x *GitLabJoinAttrs) GetNamespacePath() string {
	if x != nil {
		return x.NamespacePath
	}
	return ""
}

func (x *GitLabJoinAttrs) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GitLabJoinAttrs) GetProjectPath() string {
	if x != nil {
		return x.ProjectPath
	}
	return ""
}

func (x *GitLabJoinAttrs) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GitLabJoinAttrs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GitLabJoinAttrs) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *GitLabJoinAttrs) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GitLabJoinAttrs) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *GitLabJoinAttrs) GetPipelineSource() string {
	if x != nil {
		return x.PipelineSource
	}
	return ""
}

func (x *GitLabJoinAttrs) GetRefPath() string {
	if x != nil {
		return x.RefPath
	}
	return ""
}

func (x *GitLabJoinAttrs) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *GitLabJoinAttrs) GetEnvironmentProtected() bool {
	if x != nil {
		return x.EnvironmentProtected
	}
	return false
}

func (x *GitLabJoinAttrs) GetDeploymentTier() string {
	if x != nil {
		return x.DeploymentTier
	}
	return ""
}

func (x *GitLabJoinAttrs) GetEnvironmentAction() string {
	if x != nil {
		return x.EnvironmentAction
	}
	return ""
}

func (x *GitLabJoinAttrs) GetRunnerId() uint32 {
	if x != nil {
		return x.RunnerId
	}
	return 0
}

func (x *GitLabJoinAttrs) GetRunnerEnvironment() string {
	if x != nil {
		return x.RunnerEnvironment
	}
	return ""
}

func (x *GitLabJoinAttrs) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

func (x *GitLabJoinAttrs) GetCiConfigRefUri() string {
	if x != nil {
		return x.CiConfigRefUri
	}
	return ""
}

func (x *GitLabJoinAttrs) GetCiConfigRef() string {
	if x != nil {
		return x.CiConfigRef
	}
	return ""
}

func (x *GitLabJoinAttrs) GetJti() string {
	if x != nil {
		return x.Jti
	}
	return ""
}

// Attributes that are specific to the GitHub join method.
//
// Typically, these are mapped directly from the claims of the GitHub JWT that
// was used to join. You can view the documentation for those claims at:
// https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/about-security-hardening-with-openid-connect#understanding-the-oidc-token
type GitHubJoinAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The `sub` claim of the GitHub JWT that was used to join.
	Sub string `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	// The username of the actor that initiated the workflow run.
	Actor string `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"` // TODO: More of these...
}

func (x *GitHubJoinAttrs) Reset() {
	*x = GitHubJoinAttrs{}
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitHubJoinAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubJoinAttrs) ProtoMessage() {}

func (x *GitHubJoinAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubJoinAttrs.ProtoReflect.Descriptor instead.
func (*GitHubJoinAttrs) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *GitHubJoinAttrs) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *GitHubJoinAttrs) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

// Attributes that are specific to the AWS IAM (`iam`) join method.
//
// Typically, these are mapped directly from the results of the
// STS GetCallerIdentity call that is made as part of the join process.
type AWSIAMJoinAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Arn     string `protobuf:"bytes,2,opt,name=arn,proto3" json:"arn,omitempty"` // TODO: More of these...
}

func (x *AWSIAMJoinAttrs) Reset() {
	*x = AWSIAMJoinAttrs{}
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSIAMJoinAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSIAMJoinAttrs) ProtoMessage() {}

func (x *AWSIAMJoinAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_attributes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSIAMJoinAttrs.ProtoReflect.Descriptor instead.
func (*AWSIAMJoinAttrs) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *AWSIAMJoinAttrs) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AWSIAMJoinAttrs) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

var File_teleport_workloadidentity_v1_attributes_proto protoreflect.FileDescriptor

var file_teleport_workloadidentity_v1_attributes_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x9b, 0x02,
	0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x06,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x4c,
	0x61, 0x62, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x06, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x12, 0x45, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x3f, 0x0a, 0x03, 0x69, 0x61,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x49, 0x41, 0x4d, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x22, 0x58, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xab, 0x06, 0x0a, 0x0f, 0x47, 0x69, 0x74, 0x4c, 0x61, 0x62,
	0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x66, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x68, 0x61, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x72, 0x65, 0x66, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x66, 0x55, 0x72, 0x69, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x66, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x74, 0x69, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x74, 0x69, 0x22, 0x39, 0x0a, 0x0f, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x4a, 0x6f, 0x69,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x3d,
	0x0a, 0x0f, 0x41, 0x57, 0x53, 0x49, 0x41, 0x4d, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x6e, 0x42, 0x66, 0x5a,
	0x64, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31,
	0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x76, 0x31, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teleport_workloadidentity_v1_attributes_proto_rawDescOnce sync.Once
	file_teleport_workloadidentity_v1_attributes_proto_rawDescData = file_teleport_workloadidentity_v1_attributes_proto_rawDesc
)

func file_teleport_workloadidentity_v1_attributes_proto_rawDescGZIP() []byte {
	file_teleport_workloadidentity_v1_attributes_proto_rawDescOnce.Do(func() {
		file_teleport_workloadidentity_v1_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_workloadidentity_v1_attributes_proto_rawDescData)
	})
	return file_teleport_workloadidentity_v1_attributes_proto_rawDescData
}

var file_teleport_workloadidentity_v1_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_teleport_workloadidentity_v1_attributes_proto_goTypes = []any{
	(*JoinAttrs)(nil),       // 0: teleport.workloadidentity.v1.JoinAttrs
	(*MetaJoinAttrs)(nil),   // 1: teleport.workloadidentity.v1.MetaJoinAttrs
	(*GitLabJoinAttrs)(nil), // 2: teleport.workloadidentity.v1.GitLabJoinAttrs
	(*GitHubJoinAttrs)(nil), // 3: teleport.workloadidentity.v1.GitHubJoinAttrs
	(*AWSIAMJoinAttrs)(nil), // 4: teleport.workloadidentity.v1.AWSIAMJoinAttrs
}
var file_teleport_workloadidentity_v1_attributes_proto_depIdxs = []int32{
	1, // 0: teleport.workloadidentity.v1.JoinAttrs.meta:type_name -> teleport.workloadidentity.v1.MetaJoinAttrs
	2, // 1: teleport.workloadidentity.v1.JoinAttrs.gitlab:type_name -> teleport.workloadidentity.v1.GitLabJoinAttrs
	3, // 2: teleport.workloadidentity.v1.JoinAttrs.github:type_name -> teleport.workloadidentity.v1.GitHubJoinAttrs
	4, // 3: teleport.workloadidentity.v1.JoinAttrs.iam:type_name -> teleport.workloadidentity.v1.AWSIAMJoinAttrs
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_teleport_workloadidentity_v1_attributes_proto_init() }
func file_teleport_workloadidentity_v1_attributes_proto_init() {
	if File_teleport_workloadidentity_v1_attributes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_workloadidentity_v1_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_workloadidentity_v1_attributes_proto_goTypes,
		DependencyIndexes: file_teleport_workloadidentity_v1_attributes_proto_depIdxs,
		MessageInfos:      file_teleport_workloadidentity_v1_attributes_proto_msgTypes,
	}.Build()
	File_teleport_workloadidentity_v1_attributes_proto = out.File
	file_teleport_workloadidentity_v1_attributes_proto_rawDesc = nil
	file_teleport_workloadidentity_v1_attributes_proto_goTypes = nil
	file_teleport_workloadidentity_v1_attributes_proto_depIdxs = nil
}
